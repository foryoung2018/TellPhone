apply plugin: 'jacoco'

apply plugin: 'com.android.application'



android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.htc.lib1.cc.alertdialog"
        minSdkVersion 18
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.htc.test.HtcTestRunner"
    }

    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled = true
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    lintOptions {
        abortOnError false
    }

    jacoco {
        //bug in code coverage with espresso 2.1:
        //https://code.google.com/p/android/issues/detail?id=170607
        // http://search.maven.org/remotecontent?filepath=org/jacoco/jacoco/0.7.5.201505241946/jacoco-0.7.5.201505241946.zip
        version "0.7.5.201505241946"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}
apply plugin: 'com.htc.app.fix_public_id'



task MyJacocoCCCoverageReport(type: JacocoReport, dependsOn: "connectedAndroidTest") {
    def coverageSourceDirs = [
            'src/main/java'
    ]
    group = "Reporting"
    description = "Generates Jacoco coverage reports"
    reports {
        csv.enabled false
        xml{
            enabled = true
        }
        html{
            enabled true
        }
    }


    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*',
                      'android/**/*.*']
    def debugTree = fileTree(dir: "${project.buildDir}/intermediates/classes/debug", excludes: fileFilter)

    def libHtcSupportTree = fileTree(dir: "${project.buildDir}/intermediates/exploded-aar/htc.support/htcsupportlibrary", excludes: fileFilter)
    def libHtcCommonControlDebugTree = fileTree(dir: "${project.buildDir}/intermediates/exploded-aar/HtcCommonControl/htccommoncontrol", excludes: fileFilter)

    classDirectories = files([debugTree])
    sourceDirectories = files(coverageSourceDirs)
    additionalSourceDirs = files(coverageSourceDirs)
    additionalClassDirs = files([libHtcCommonControlDebugTree, libHtcSupportTree])
    executionData = fileTree(dir: project.projectDir, includes: ['**/*.exec', '**/*.ec']);

}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'htc.support:htcsupportlibrary:1.0.0'
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile project(':htccommoncontrol');
    compile project(':tests:CommonControlAutLibrary');
    androidTestCompile 'com.android.support.test:runner:0.4'
    androidTestCompile 'com.android.support.test:rules:0.4'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile project(':tests:CommonControlTestLibrary');

    testCompile "junit:junit:4.10"
    testCompile "org.assertj:assertj-core:1.7.0"
    testCompile "org.robolectric:robolectric:3.0"
}

jacoco {
    // http://search.maven.org/remotecontent?filepath=org/jacoco/jacoco/0.7.5.201505241946/jacoco-0.7.5.201505241946.zip
    toolVersion "0.7.5.201505241946"
}

apply plugin: 'com.htc.commoncontrol'
